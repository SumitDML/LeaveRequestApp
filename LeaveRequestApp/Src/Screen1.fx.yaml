"Screen1 As screen.'tabletLayout_Calendar_ver3.0'":

    RectMeetingBkg1 As rectangle:
        Height: =42
        Visible: =_calendarVisible
        Width: =Parent.Width - Self.X
        X: =422
        Y: =RectQuickActionBar1.Height
        ZIndex: =1

    RectQuickActionBar1 As rectangle:
        Height: =64
        Width: =Parent.Width
        ZIndex: =2

    LblAppName1 As label:
        Height: =64
        PaddingLeft: =0
        Text: ="Calendar"
        Width: =Parent.Width - Self.X * 2
        Wrap: =false
        X: =32
        ZIndex: =3

    LblResetToday1 As label:
        Align: =Align.Center
        Color: =iconCalendar1.Color
        FontWeight: =FontWeight.Bold
        Height: =iconCalendar1.Height
        PaddingTop: =12
        Size: =11
        Text: =DateDiff(Date(Year(Today()), Month(Today()), 1), Today(), TimeUnit.Days) + 1
        Width: =iconCalendar1.Width
        X: =iconCalendar1.X
        Y: =iconCalendar1.Y
        ZIndex: =4

    iconNextMonth1 As icon.ChevronRight:
        Height: =50
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayOfMonth, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value))
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Tooltip: ="View next month"
        Visible: =_calendarVisible
        Width: =59
        X: =419 - Self.Width
        Y: =LblMonthSelected1.Y
        ZIndex: =9

    LblDateSelected1 As label:
        Height: =RectMeetingBkg1.Height
        Size: =13
        Text: =Text(_dateSelected, DateTimeFormat.LongDate)
        Visible: =_calendarVisible
        Width: =Parent.Width / 3 - 60
        Wrap: =false
        X: =451
        Y: =RectQuickActionBar1.Height
        ZIndex: =12

    CalendarEventsGallery1 As gallery.CalendarEventsGallery:
        AccessibleLabel: ="Calendar events for selected day"
        Height: =Parent.Height - Self.Y
        Items: |-
            =/*Shows events only on selected date*/
            SortByColumns(Filter(MyCalendarEvents, Text(Start, DateTimeFormat.ShortDate) = Text(_dateSelected, DateTimeFormat.ShortDate)), "Start")
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =85
        Visible: =_calendarVisible
        Width: =Parent.Width - Self.X
        X: =422
        Y: =LblDateSelected1.Y + LblDateSelected1.Height
        ZIndex: =13

        Rectangle6 As rectangle:
            BorderThickness: =If(ThisItem.Id = _selectedCalendarEvent.Id, 2, 0)
            Fill: =RGBA(0,0,0,0)
            Height: =Parent.TemplateHeight
            HoverFill: =RGBA(0,0,0,0)
            OnSelect: =Select(Title4)
            TabIndex: =0
            Width: =Parent.TemplateWidth
            ZIndex: =1

        iconLocation1 As icon.Waypoint:
            Height: =Subtitle1.Height
            Icon: =Icon.Waypoint
            OnSelect: =Select(Title4)
            TabIndex: =0
            Width: =28
            X: =Title4.X
            Y: =Subtitle1.Y
            ZIndex: =2

        Title4 As label:
            BorderColor: =Self.Color
            FocusedBorderThickness: =2
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Set(_selectedCalendarEvent, ThisItem)
            Size: =19 * CalendarEventsGallery1.TemplateHeight / 105
            TabIndex: =0
            Text: =ThisItem.Subject
            Tooltip: =ThisItem.Subject
            Width: =CalendarEventsGallery1.TemplateWidth - Self.X - 10
            Wrap: =false
            X: =Body1.X + Body1.Width + 10
            Y: =CalendarEventsGallery1.TemplateHeight / 4 - Self.Height / 2 + 5
            ZIndex: =3

        Subtitle1 As label:
            FocusedBorderThickness: =2
            FontWeight: =FontWeight.Lighter
            Height: =Self.Size * 2
            OnSelect: =Select(Title4)
            PaddingBottom: =0
            Size: =18 * CalendarEventsGallery1.TemplateHeight / 105
            Text: =ThisItem.Location
            Tooltip: =ThisItem.Location
            Width: =CalendarEventsGallery1.TemplateWidth - Self.X - 10
            Wrap: =false
            X: =iconLocation1.X + iconLocation1.Width + 10
            Y: =3 / 4 * CalendarEventsGallery1.TemplateHeight - Self.Height / 2 - 5
            ZIndex: =4

        Body1 As label:
            FocusedBorderThickness: =2
            Height: =Title4.Height
            OnSelect: =Select(Title4)
            Size: =17 * CalendarEventsGallery1.TemplateHeight / 105
            Text: =Text(ThisItem.Start, DateTimeFormat.ShortTime)
            Width: =110
            Wrap: =false
            X: =32
            Y: =Title4.Y
            ZIndex: =5

        Description1 As label:
            FocusedBorderThickness: =2
            Height: =Subtitle1.Height
            OnSelect: =Select(Title4)
            Size: =17 * CalendarEventsGallery1.TemplateHeight / 105
            Text: =DateDiff(ThisItem.Start, ThisItem.End, TimeUnit.Minutes) & Lower(Left("Minute_Name", 1))
            Width: =100
            Wrap: =false
            X: =32
            Y: =Subtitle1.Y
            ZIndex: =6

        Separator1 As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =7

    iconEmptyState1 As icon.CalendarBlank:
        DisplayMode: =DisplayMode.View
        Icon: =Icon.CalendarBlank
        Visible: =IsBlank(_userDomain)
        X: =2* Parent.Width/3 - Self.Width / 2
        Y: =LblNoEvents1.Y - Self.Height
        ZIndex: =14

    RectCalendarSeparator1 As rectangle:
        Height: =Parent.Height - Self.Y
        Width: =2
        X: =420
        Y: =RectQuickActionBar1.Height
        ZIndex: =16

    Rectangle7 As rectangle:
        BorderColor: =RGBA(50, 86, 160, 1)
        BorderThickness: =1
        Fill: =RGBA(0, 0, 0, 0)
        Height: =401
        Width: =419
        X: =495
        Y: =287
        ZIndex: =22

    CalendarFrame As group:
        Height: =5
        Width: =5
        X: =20
        Y: =40
        ZIndex: =22

        LblMonthSelected1_1 As label:
            Align: =Align.Center
            Height: =50
            Size: =18
            Text: =Text(_firstDayOfMonth, "mmmm yyyy")
            Visible: =_calendarVisible
            Width: =419
            Wrap: =false
            X: =495
            Y: =287
            ZIndex: =17

        iconPrevMonth1_1 As icon.ChevronLeft:
            Height: =50
            Icon: =Icon.ChevronLeft
            OnSelect: |-
                =/*changes month view to previous month*/
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
                /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/
                If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth);)
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            TabIndex: =0
            Tooltip: ="View previous month"
            Visible: =_calendarVisible
            Width: =59
            X: =181
            Y: =287
            ZIndex: =18

        iconNextMonth1_1 As icon.ChevronRight:
            Height: =50
            Icon: =Icon.ChevronRight
            OnSelect: |-
                =/*changes month view to next month*/
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
                /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
                If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); )
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            TabIndex: =0
            Tooltip: ="View next month"
            Visible: =_calendarVisible
            Width: =59
            X: =1170
            Y: =320
            ZIndex: =19

        WeekdayGallery1_1 As gallery.WeekdayGallery:
            AccessibleLabel: ="Days of the week"
            Height: =45
            Items: =Calendar.WeekdaysShort()
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =60
            Visible: =_calendarVisible
            Width: =420
            X: =495
            Y: =347
            ZIndex: =20

            Title2_1 As label:
                Align: =Align.Center
                Height: =WeekdayGallery1_1.TemplateHeight
                OnSelect: =Select(Parent)
                Size: =17 * WeekdayGallery1_1.TemplateWidth / 77
                Text: =ThisItem.Value
                Width: =WeekdayGallery1_1.TemplateWidth
                Wrap: =false
                X: =WeekdayGallery1_1.TemplateWidth / 2 - Self.Width / 2
                Y: =WeekdayGallery1_1.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =1

        MonthDayGallery1_1 As gallery.MonthDayGallery:
            AccessibleLabel: ="Days of selected month"
            Height: =296
            Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
            Layout: =Layout.Vertical
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =60
            Visible: =_calendarVisible
            Width: =420
            WrapCount: =7
            X: =495
            Y: =392
            ZIndex: =21

            Circle2_1 As circle:
                Height: =Self.Width
                OnSelect: =Select(Parent)
                Visible: |-
                    =/*Visible if calendar events are found on this day*/               
                    CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days))) > 0 && !Subcircle1_1.Visible && Title3_1.Visible
                Width: =6.5
                X: =MonthDayGallery1_1.TemplateWidth / 2 - Self.Width / 2
                Y: =MonthDayGallery1_1.TemplateHeight * (0.75)
                ZIndex: =1

            Subcircle1_1 As circle:
                Height: =3 * Title3_1.Size
                OnSelect: =Select(Parent)
                Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title3_1.Visible)
                Width: =Self.Height
                X: =MonthDayGallery1_1.TemplateWidth/2 - Self.Width/2
                Y: =MonthDayGallery1_1.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =2

            Title3_1 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected1_1.Color)
                Fill: |-
                    =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                    If(
                        /*Date selected is today*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                        /*Today when it is not selected*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1_1.Fill, 0.67), 
                        /*The day is outside the range of the currently selected month*/
                        Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                FocusedBorderColor: =Self.Color
                FocusedBorderThickness: =2
                Height: =MonthDayGallery1_1.TemplateHeight
                OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                Size: =17 * MonthDayGallery1_1.TemplateWidth / 91
                TabIndex: =0
                Text: =Day(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days))
                Visible: |-
                    =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                     !(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)) + 1 > _lastDayOfMonth)
                Width: =MonthDayGallery1_1.TemplateWidth
                Wrap: =false
                ZIndex: =3

