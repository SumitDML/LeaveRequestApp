CalendarComponentMain As CanvasComponent:
    AllowSelectionOfWeekends: =true
    BorderRadius: =1
    CalendarItems: |-
        =Table(
            {
                Date: "11/3/2020",
                Title: "Meeting",
                Time: "1:30pm"
            },
             {
                Date: "11/3/2020",
                Title: "Power Apps Training",
                Time: "3:00pm"
            },
            {
                Date: "11/26/2020",
                Title: "Thanksgiving Day",
                Time: "All Day"
            },
             {
                Date: "11/27/2020",
                Title: "Thanksgiving Day",
                Time: "All Day"
            }
        )
    Color: =RGBA(0, 0, 0, 1)
    DefaultEndDate: =Now()
    DefaultStartDate: =Now()
    EndDate: =_selectedEnd
    Fill: =RGBA(0, 0, 0, 0)
    Height: =640
    OnReset: =Set(visible_variable, true)
    SelectedDateColor: =Color.White
    SelectedDateFill: =RGBA(
    SelectRange: =false
    ShowCalendar: =visible_variable
    ShowCalendarEvents: =true
    ShowCloseIcon: =true
    ShowLongWeekday: =true
    StartDate: =_selectedStart
    StartWeekOnMonday: =false
    Width: =640
    X: =0
    Y: =0
    ZIndex: =1

    galWeekdays_1 As gallery.galleryHorizontal:
        BorderColor: =RGBA(130, 144, 156, 1)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =galWeekdays_1.BorderColor
        DisabledFill: =galWeekdays_1.Fill
        Height: =37
        HoverBorderColor: =galWeekdays_1.BorderColor
        HoverFill: =galWeekdays_1.Fill
        Items: |-
            =Switch(CalendarComponentMain.ShowLongWeekday,
            true,
            If(
                CalendarComponentMain.StartWeekOnMonday = false,
                [
                    "Sun",
                    "Mon",
                    "Tues",
                    "Weds",
                    "Thurs",
                    "Fri",
                    "Sat",
                ],
                [
                    "Mon",
                    "Tues",
                    "Weds",
                    "Thurs",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ),
            If(
                CalendarComponentMain.StartWeekOnMonday = false,
                [
                    "S",
                    "M",
                    "T",
                    "W",
                    "T",
                    "F",
                    "S",
                ],
                [
                    "M",
                    "T",
                    "W",
                    "T",
                    "F",
                    "S",
                    "S"
                ]
            ))
        PressedBorderColor: =galWeekdays_1.BorderColor
        PressedFill: =galWeekdays_1.Fill
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =84
        Width: =600
        Y: =btnPrevMonth_1.Y + btnPrevMonth_1.Height + 20
        ZIndex: =1

        lblWeekday_2 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0,0,0,0)
            BorderStyle: =BorderStyle.None
            Color: |-
                =ColorValue("#212121")
            DisabledBorderColor: =RGBA(0,0,0,0)
            DisabledColor: |-
                =ColorValue("#A7A7A7")
            Fill: =RGBA(237, 237, 237, 1)
            FocusedBorderColor: =RGBA(0,0,0,0)
            Font: =Font.'Segoe UI'
            FontWeight: =
            Height: =34
            HoverBorderColor: =RGBA(0,0,0,0)
            HoverColor: =
            HoverFill: =RGBA(0,0,0,0)
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =0.00
            PressedBorderColor: =RGBA(0,0,0,0)
            PressedColor: |-
                =ColorValue("#A7A7A7")
            PressedFill: =RGBA(0,0,0,0)
            Size: =12
            Text: =ThisItem.Value
            Width: =Parent.TemplateWidth
            ZIndex: =1

    tmrInitialize_2 As timer:
        AutoStart: =IsBlank(_today)
        BorderColor: =RGBA(0, 120, 212, 1)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =RGBA(244, 244, 244, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(0, 120, 212, 1)
        FocusedBorderColor: =tmrInitialize_2.BorderColor
        Font: =Font.'Segoe UI'
        HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        OnTimerStart: |-
            =Set(
                _today,
                Today()
            );
            /* if default dates are provided, set to inputs, otherwise set to today */
            Set(
                _selectedStart,
                If(
                    !IsBlank(CalendarComponentMain.DefaultStartDate),
                    CalendarComponentMain.DefaultStartDate,
                    _today
                )
            );
            Set(
                _selectedEnd,
                If(
                    !IsBlank(CalendarComponentMain.DefaultEndDate) && CalendarComponentMain.DefaultEndDate > _selectedStart,
                    CalendarComponentMain.DefaultEndDate,
                    Blank()
                )
            );
            If(
                CalendarComponentMain.StartWeekOnMonday = false,
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _selectedStart,
                        1 - Day(_selectedStart),
                        TimeUnit.Days
                    )
                ),
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 3,
                            7
                        ) + 1),
                        TimeUnit.Days
                    )
                )
            );
            Set(
                _firstDayInView,
              DateAdd(_firstDayOfMonth,-(Mod(Weekday(_firstDayOfMonth)-3,7)+1),TimeUnit.Days)
            )
        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        Text: |-
            =Text(Time(0, 0, tmrInitialize_2.Value/1000), "hh:mm:ss")
        Visible: =false
        Y: =446
        ZIndex: =2

    lblMonthYear_1 As label:
        Color: =CalendarComponentMain.Color
        FocusedBorderColor: =lblMonthYear_1.BorderColor
        FontWeight: =FontWeight.Semibold
        Height: =48
        HoverBorderColor: =lblMonthYear_1.BorderColor
        HoverColor: =lblMonthYear_1.Color
        HoverFill: =lblMonthYear_1.Fill
        PaddingLeft: =15
        PressedBorderColor: =lblMonthYear_1.BorderColor
        PressedColor: =lblMonthYear_1.Color
        PressedFill: =lblMonthYear_1.Fill
        Size: =18
        Text: |-
            =If(
                IsBlank(_today),
                Text(
                    Now(),
                    "[$-en-US]mmmm"
                ) & " " & Text(
                    Now(),
                    "[$-en-US]yyyy"
                ),
                Text(
                    _firstDayOfMonth,
                    "[$-en-US]mmmm"
                ) & " " & Text(
                    _firstDayOfMonth,
                    "[$-en-US]yyyy"
                )
            )
        Width: =256
        Y: =8
        ZIndex: =3

    btnPrevMonth_1 As icon.ChevronLeft:
        BorderColor: =RGBA(166, 166, 166, 1)
        Color: =If(!IsBlank(CalendarComponentMain.SelectedDateFill),CalendarComponentMain.SelectedDateFill,tmrInitialize_2.Fill)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(220, 220, 220, 1)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderColor: =btnPrevMonth_1.BorderColor
        FocusedBorderThickness: =4
        Height: =Parent.Height / 16
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        HoverFill: =RGBA(0, 0, 0, 0)
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =If(CalendarComponentMain.StartWeekOnMonday = false, Set(
                _firstDayOfMonth,
                DateAdd(
                    _firstDayOfMonth,
                    -1,
                    TimeUnit.Months
                )
            );
            Set(
                _firstDayInView,
                DateAdd(
                    _firstDayOfMonth,
                    -(Mod(
                        Weekday(_firstDayOfMonth) - 2,
                        7
                    ) + 1),
                    TimeUnit.Months
                )
            ),
            Set(
                _firstDayOfMonth,
                DateAdd(
                    _firstDayOfMonth,
                    -1,
                    TimeUnit.Months
                )
            );
            Set(
                _firstDayInView,
               DateAdd(_firstDayOfMonth,-(Mod(Weekday(_firstDayOfMonth)-3,7)+1),TimeUnit.Days)
            ))
        PaddingBottom: |
            =7
        PaddingTop: =7 
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedFill: =RGBA(0, 0, 0, 0)
        Width: =Parent.Width / 10
        X: =lblMonthYear_1.X + lblMonthYear_1.Width + 20
        Y: =8
        ZIndex: =4

    btnNextMonth_1 As icon.ChevronRight:
        BorderColor: =RGBA(166, 166, 166, 1)
        Color: =btnPrevMonth_1.Color
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(220, 220, 220, 1)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderColor: =btnNextMonth_1.BorderColor
        FocusedBorderThickness: =4
        Height: =btnPrevMonth_1.Height
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        HoverFill: =RGBA(0, 0, 0, 0)
        Icon: =Icon.ChevronRight
        OnSelect: |
            =Switch(
                CalendarComponentMain.StartWeekOnMonday,
                false,
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _firstDayOfMonth,
                        1,
                        TimeUnit.Months
                    )
                );
                Set(
                    _firstDayInView,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 2,
                            7
                        ) + 1),
                        TimeUnit.Days
                    )
                ),
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _firstDayOfMonth,
                        1,
                        TimeUnit.Months
                    )
                );
                Set(
                    _firstDayInView, 
                 DateAdd(_firstDayOfMonth,-(Mod(Weekday(_firstDayOfMonth)-3,7)+1),TimeUnit.Days)
                )
            );
        PaddingBottom: |
            =7
        PaddingTop: =7
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedFill: =RGBA(0, 0, 0, 0)
        Width: =btnPrevMonth_1.Width
        X: =btnToday_1.X + btnToday_1.Width + 5
        Y: =8
        ZIndex: =5

    btnToday_1 As button:
        Color: =RGBA(0, 0, 0, 1)
        Fill: =RGBA(0, 0, 0, 0)
        HoverColor: =Self.Color
        HoverFill: =Self.Fill
        OnSelect: |-
            =Set(
                _today,
                Today()
            );
            If(
                CalendarComponentMain.StartWeekOnMonday = false,
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _today,
                        1 - Day(_today),
                        TimeUnit.Days
                    )
                );
                Set(
                    _firstDayInView,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 2,
                            7
                        ) + 1),
                        TimeUnit.Days
                    )
                ),
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _today,
                        1 - Day(_today),
                        TimeUnit.Days
                    )
                );
                Set(
                    _firstDayInView,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 3,
                            7
                        ) + 1),
                        TimeUnit.Days
                    )
                )
            );
            Set(
                _selectedStart,
                Blank()
            );
            Set(
                _selectedEnd,
                Blank()
            )
        Size: =16
        Text: ="Today"
        Width: =100
        X: =btnPrevMonth_1.X + btnPrevMonth_1.Width + 5
        Y: =8
        ZIndex: =6

    galCalendar_1 As gallery.galleryVertical:
        BorderColor: =RGBA(130, 144, 156, 1)
        DisabledBorderColor: =galCalendar_1.BorderColor
        DisabledFill: =galCalendar_1.Fill
        Height: =531
        HoverBorderColor: =galCalendar_1.BorderColor
        HoverFill: =galCalendar_1.Fill
        Items: |-
            =[  0, 1, 2, 3, 4, 5, 6,
               7, 8, 9,10,11,12,13,
              14,15,16,17,18,19,20,
              21,22,23,24,25,26,27,
              28,29,30,31,32,33,34,
              35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        PressedBorderColor: =galCalendar_1.BorderColor
        PressedFill: =galCalendar_1.Fill
        ShowScrollbar: =false
        TemplatePadding: |
            =0
        TemplateSize: =55
        Width: =600
        WrapCount: =7
        Y: =109
        ZIndex: =7

        Rectangle2_1 As rectangle:
            BorderColor: =RGBA(230, 230, 230, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Parent.TemplateHeight-2
            OnSelect: =Select(Parent)
            Width: =91
            ZIndex: =1

        icnToday As circle:
            BorderColor: =RGBA(130, 144, 156, 1)
            BorderStyle: =BorderStyle.None
            DisabledFill: =icnToday.Fill
            Fill: |-
                =If(
                    /* transparent if calender is not initialized yet */
                    IsBlank(_today), 
                        RGBA(0,0,0,0),
                        
                    /* else set to input property SelectedDateFill */
                    !IsBlank(CalendarComponentMain.SelectedDateFill),
                        ColorFade(CalendarComponentMain.SelectedDateFill,-10%),
                
                    /* else default to theme fill */
                    ColorFade(tmrInitialize_2.Fill,-10%)
                )
            FocusedBorderColor: =icnToday.BorderColor
            FocusedBorderThickness: =0
            Height: =45
            HoverFill: =icnToday.Fill
            OnSelect: =Select(Parent)
            PressedFill: =icnToday.Fill
            Visible: |-
                =DateAdd(
                        _firstDayInView,
                        ThisItem.Value,
                        TimeUnit.Days
                    ) = _today
            Width: =45
            X: =23
            Y: =5
            ZIndex: =2

        btnDayBack As button:
            BorderColor: =ColorFade(btnDayBack.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: |-
                =If(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)=_selectedStart || DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)=_selectedEnd,
                        CalendarComponentMain.SelectedDateColor,
                    DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)=_today || Month(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days))=Month(_firstDayOfMonth),
                        Color.Black,
                    ColorFade(Color.Black,60%))
            DisabledBorderColor: =ColorFade(btnDayBack.BorderColor, 70%)
            DisabledColor: =ColorFade(RGBA(47, 41, 43, 1), 70%)
            DisabledFill: =ColorFade(RGBA(159, 167, 165, 1), 50%)
            Fill: |-
                =If(
                    /* transparent before initialized */
                    IsBlank(_today),
                        RGBA(0,0,0,0),
                        
                    DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) < _selectedEnd,
                    ColorFade(CalendarComponentMain.SelectedDateFill,0%)
                    , 
                // default
                    RGBA(0,0,0,0))
            FocusedBorderColor: =btnDayBack.BorderColor
            FocusedBorderThickness: =0
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Normal
            Height: =btnDayValue.Height
            HoverBorderColor: =ColorFade(btnDayBack.BorderColor, 20%)
            HoverColor: =btnDayBack.Color
            HoverFill: =ColorFade(btnDayBack.Fill, -10%)
            OnSelect: |-
                =/*Set(_selectedDate, DateAdd(_firstDayInView,ThisItem.Value,Days));
                // choose end
                If(!IsBlank(_selectedStart) && IsBlank(_selectedEnd) && _selectedDate >= _selectedStart, 
                    Set(_selectedEnd, _selectedDate)
                ,
                // default: set start if empty or resetting
                    Set(_selectedStart, _selectedDate);
                    Set(_selectedEnd, Blank()))*/
                    ""
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedBorderColor: =btnDayBack.Fill
            PressedColor: =RGBA(0, 0, 0, 1)
            PressedFill: =Color.LightBlue
            RadiusBottomLeft: =If(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart || DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedEnd, CalendarComponentMain.BorderRadius,0)
            RadiusBottomRight: =If(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart,0, DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedEnd, CalendarComponentMain.BorderRadius)
            RadiusTopLeft: =If(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart || DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedEnd, CalendarComponentMain.BorderRadius,0)
            RadiusTopRight: =If(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart,0, DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedEnd, CalendarComponentMain.BorderRadius)
            Size: =18
            Text: =
            Visible: |-
                =false //Calendar.SelectRange
                //DateAdd(_firstDayInView,ThisItem.Value,Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,Days) < _selectedEnd
            Width: =btnDayValue.Width
            X: =btnDayValue.X
            Y: =btnDayValue.Y
            ZIndex: =3

        btnDayValue As button:
            BorderColor: =ColorFade(btnDayValue.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: |-
                =If(
                    /* transparent before initialized */
                    IsBlank(_today), 
                        RGBA(0,0,0,1),
                    /* range enabled and date is start or end */
                    DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)=_selectedStart ||
                    (CalendarComponentMain.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) <= _selectedEnd)),
                       CalendarComponentMain.SelectedDateColor,
                    /* color of dates that share the same month*/
                    Month(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)) = Month(_firstDayOfMonth),
                        CalendarComponentMain.Color,
                    /* default text color */
                    Color.Gray
                )
            DisabledBorderColor: =ColorFade(btnDayValue.BorderColor, 70%)
            DisabledColor: =ColorFade(RGBA(47, 41, 43, 1), 70%)
            DisabledFill: =Color.LightGray
            DisplayMode: |-
                =If(
                    CalendarComponentMain.AllowSelectionOfWeekends = true,
                    DisplayMode.Edit,
                    Switch(CalendarComponentMain.StartWeekOnMonday,false,
                    If(
                        Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Sunday
                        ) = 1 || Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Sunday
                        ) = 7,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    ),
                     If(
                        Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Monday
                        ) = 6 || Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Monday
                        ) = 7,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                    )
                )
            Fill: |-
                =If(
                    /* transparent before initialized */
                    IsBlank(_today),
                        RGBA(0,0,0,0),
                
                    /* when range off, only show start date */
                    DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart 
                    || (CalendarComponentMain.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) >= _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) <=_selectedEnd)),
                        CalendarComponentMain.SelectedDateFill 
                    /* transparent by default */
                    ,RGBA(0,0,0,0)
                )
            FocusedBorderColor: =btnDayValue.BorderColor
            FocusedBorderThickness: =0
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =Parent.TemplateHeight-5
            HoverBorderColor: =ColorFade(btnDayValue.BorderColor, 20%)
            HoverColor: =btnDayValue.Color
            HoverFill: =ColorFade(btnDayValue.Fill, -10%)
            OnSelect: |-
                =Set(
                    _selectedDate,
                        DateAdd(
                            _firstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                );
                If(
                    CalendarComponentMain.SelectRange,
                // choose end
                    If(
                        !IsBlank(_selectedStart) && IsBlank(_selectedEnd) && _selectedDate >= _selectedStart,
                        Set(
                            _selectedEnd,
                            _selectedDate
                        ),
                // default: set start if empty or resetting
                        Set(
                            _selectedStart,
                            _selectedDate
                        );
                        Set(
                            _selectedEnd,
                            Blank()
                        )
                    ),
                    Set(
                        _selectedStart,
                        _selectedDate
                    );
                    Set(
                        _selectedEnd,
                        Blank()
                    )
                )
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedBorderColor: =btnDayValue.Fill
            PressedColor: =RGBA(0, 0, 0, 1)
            PressedFill: =ColorFade(CalendarComponentMain.SelectedDateFill,60%)
            RadiusBottomLeft: =btnDayValue.RadiusTopLeft
            RadiusBottomRight: =btnDayValue.RadiusTopRight
            RadiusTopLeft: |-
                =If(
                    /* input radius if dates are the same */
                    _selectedStart = _selectedEnd || DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart, 
                        CalendarComponentMain.BorderRadius,
                    /* square if end date or between start and end*/
                    CalendarComponentMain.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) <= _selectedEnd), 
                        0,
                    /* default radius */
                    CalendarComponentMain.BorderRadius
                )
            RadiusTopRight: |-
                =If(
                    /* input radius for single date mode, or if in range mode the selected end */
                    (_selectedStart = _selectedEnd || !CalendarComponentMain.SelectRange) || (CalendarComponentMain.SelectRange && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedEnd), 
                        CalendarComponentMain.BorderRadius,
                    /* square if in range mode and the start date or in between start and end date */
                    CalendarComponentMain.SelectRange && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart && !IsBlank(_selectedEnd) 
                    || (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) < _selectedEnd), 
                        0,
                    /* default radius */
                   CalendarComponentMain.BorderRadius
                ) 
            Size: =14
            Text: |-
                =If(
                    IsBlank(_today),
                    ThisItem.Value,
                     Day(
                        DateAdd(
                            _firstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                    )
                   
                )
            Width: =galCalendar_1.TemplateWidth
            X: =(Parent.TemplateWidth - btnDayValue.Width) / 2
            ZIndex: =4

        icnEvent As circle:
            BorderColor: =RGBA(130, 144, 156, 1)
            BorderStyle: =BorderStyle.None
            DisabledFill: =icnEvent.Fill
            Fill: |-
                =If(
                    /* transparent if calender is not initialized yet */
                    IsBlank(_today), 
                        RGBA(0,0,0,0),
                        
                    /* else set to input property SelectedDateFill */
                    !IsBlank(CalendarComponentMain.SelectedDateFill),
                        ColorFade(CalendarComponentMain.SelectedDateFill,-10%),
                
                    /* else default to theme fill */
                    ColorFade(tmrInitialize_2.Fill,-10%)
                )
            FocusedBorderColor: =icnEvent.BorderColor
            FocusedBorderThickness: =0
            Height: =5
            HoverFill: =icnEvent.Fill
            OnSelect: =Select(Parent)
            PressedFill: =icnEvent.Fill
            Visible: |-
                =If(
                    CalendarComponentMain.ShowCalendarEvents = false,
                    DateAdd(
                        _firstDayInView,
                        ThisItem.Value,
                        TimeUnit.Days
                    ) = _today,
                    If(
                   CountRows(
                    Filter(
                        CalendarComponentMain.CalendarItems,
                        DateValue(Text(Date)) = DateAdd(
                            _firstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                    )
                ) > 0, true,false)
                )
            Width: =5
            X: =(btnDayValue.Width - icnEvent.Width) / 2
            Y: =btnDayValue.Y + btnDayValue.Height - icnEvent.Height
            ZIndex: =5

    iconClose As icon.Cancel:
        Height: =40
        Icon: =Icon.Cancel
        OnSelect: =Set(customdatepicker, false)
        Width: =40
        X: =560
        Y: =12
        ZIndex: =8

